// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: bionic.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "bionic.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace bionic {

namespace {

const ::google::protobuf::Descriptor* CentralControlsReport_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CentralControlsReport_reflection_ = NULL;
const ::google::protobuf::Descriptor* CentralControlsReport_CentralControl_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CentralControlsReport_CentralControl_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* CentralControlsReport_CentralControl_ControlType_descriptor_ = NULL;
const ::google::protobuf::Descriptor* UnitMotionReport_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  UnitMotionReport_reflection_ = NULL;
const ::google::protobuf::Descriptor* UnitMotionReport_UnitMotion_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  UnitMotionReport_UnitMotion_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* UnitMotionReport_UnitMotion_MotionType_descriptor_ = NULL;
const ::google::protobuf::Descriptor* UnitParametersReport_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  UnitParametersReport_reflection_ = NULL;
const ::google::protobuf::Descriptor* UnitParametersReport_UnitParameter_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  UnitParametersReport_UnitParameter_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_bionic_2eproto() {
  protobuf_AddDesc_bionic_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "bionic.proto");
  GOOGLE_CHECK(file != NULL);
  CentralControlsReport_descriptor_ = file->message_type(0);
  static const int CentralControlsReport_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CentralControlsReport, centralcontrol_),
  };
  CentralControlsReport_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CentralControlsReport_descriptor_,
      CentralControlsReport::default_instance_,
      CentralControlsReport_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CentralControlsReport, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CentralControlsReport, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CentralControlsReport));
  CentralControlsReport_CentralControl_descriptor_ = CentralControlsReport_descriptor_->nested_type(0);
  static const int CentralControlsReport_CentralControl_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CentralControlsReport_CentralControl, controltype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CentralControlsReport_CentralControl, controlparameter_),
  };
  CentralControlsReport_CentralControl_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CentralControlsReport_CentralControl_descriptor_,
      CentralControlsReport_CentralControl::default_instance_,
      CentralControlsReport_CentralControl_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CentralControlsReport_CentralControl, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CentralControlsReport_CentralControl, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CentralControlsReport_CentralControl));
  CentralControlsReport_CentralControl_ControlType_descriptor_ = CentralControlsReport_CentralControl_descriptor_->enum_type(0);
  UnitMotionReport_descriptor_ = file->message_type(1);
  static const int UnitMotionReport_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnitMotionReport, unitmotion_),
  };
  UnitMotionReport_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      UnitMotionReport_descriptor_,
      UnitMotionReport::default_instance_,
      UnitMotionReport_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnitMotionReport, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnitMotionReport, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(UnitMotionReport));
  UnitMotionReport_UnitMotion_descriptor_ = UnitMotionReport_descriptor_->nested_type(0);
  static const int UnitMotionReport_UnitMotion_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnitMotionReport_UnitMotion, motiontype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnitMotionReport_UnitMotion, motiondata_),
  };
  UnitMotionReport_UnitMotion_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      UnitMotionReport_UnitMotion_descriptor_,
      UnitMotionReport_UnitMotion::default_instance_,
      UnitMotionReport_UnitMotion_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnitMotionReport_UnitMotion, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnitMotionReport_UnitMotion, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(UnitMotionReport_UnitMotion));
  UnitMotionReport_UnitMotion_MotionType_descriptor_ = UnitMotionReport_UnitMotion_descriptor_->enum_type(0);
  UnitParametersReport_descriptor_ = file->message_type(2);
  static const int UnitParametersReport_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnitParametersReport, unitparameter_),
  };
  UnitParametersReport_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      UnitParametersReport_descriptor_,
      UnitParametersReport::default_instance_,
      UnitParametersReport_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnitParametersReport, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnitParametersReport, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(UnitParametersReport));
  UnitParametersReport_UnitParameter_descriptor_ = UnitParametersReport_descriptor_->nested_type(0);
  static const int UnitParametersReport_UnitParameter_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnitParametersReport_UnitParameter, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnitParametersReport_UnitParameter, minval_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnitParametersReport_UnitParameter, maxval_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnitParametersReport_UnitParameter, currentval_),
  };
  UnitParametersReport_UnitParameter_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      UnitParametersReport_UnitParameter_descriptor_,
      UnitParametersReport_UnitParameter::default_instance_,
      UnitParametersReport_UnitParameter_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnitParametersReport_UnitParameter, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnitParametersReport_UnitParameter, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(UnitParametersReport_UnitParameter));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_bionic_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CentralControlsReport_descriptor_, &CentralControlsReport::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CentralControlsReport_CentralControl_descriptor_, &CentralControlsReport_CentralControl::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    UnitMotionReport_descriptor_, &UnitMotionReport::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    UnitMotionReport_UnitMotion_descriptor_, &UnitMotionReport_UnitMotion::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    UnitParametersReport_descriptor_, &UnitParametersReport::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    UnitParametersReport_UnitParameter_descriptor_, &UnitParametersReport_UnitParameter::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_bionic_2eproto() {
  delete CentralControlsReport::default_instance_;
  delete CentralControlsReport_reflection_;
  delete CentralControlsReport_CentralControl::default_instance_;
  delete CentralControlsReport_CentralControl_reflection_;
  delete UnitMotionReport::default_instance_;
  delete UnitMotionReport_reflection_;
  delete UnitMotionReport_UnitMotion::default_instance_;
  delete UnitMotionReport_UnitMotion_reflection_;
  delete UnitParametersReport::default_instance_;
  delete UnitParametersReport_reflection_;
  delete UnitParametersReport_UnitParameter::default_instance_;
  delete UnitParametersReport_UnitParameter_reflection_;
}

void protobuf_AddDesc_bionic_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\014bionic.proto\022\006bionic\"\224\002\n\025CentralContro"
    "lsReport\022D\n\016centralControl\030\001 \003(\0132,.bioni"
    "c.CentralControlsReport.CentralControl\032\264"
    "\001\n\016CentralControl\022M\n\013controlType\030\001 \002(\01628"
    ".bionic.CentralControlsReport.CentralCon"
    "trol.ControlType\022\030\n\020controlParameter\030\002 \002"
    "(\002\"9\n\013ControlType\022\024\n\020ANIMATION_CHANGE\020\000\022"
    "\024\n\020PARAMETER_CHANGE\020\001\"\363\001\n\020UnitMotionRepo"
    "rt\0227\n\nunitMotion\030\001 \003(\0132#.bionic.UnitMoti"
    "onReport.UnitMotion\032\245\001\n\nUnitMotion\022B\n\nmo"
    "tionType\030\001 \002(\0162..bionic.UnitMotionReport"
    ".UnitMotion.MotionType\022\022\n\nmotionData\030\002 \002"
    "(\002\"\?\n\nMotionType\022\023\n\017ACCEL_MAGNITUDE\020\000\022\007\n"
    "\003YAW\020\001\022\t\n\005PITCH\020\002\022\010\n\004ROLL\020\003\"\254\001\n\024UnitPara"
    "metersReport\022A\n\runitParameter\030\001 \003(\0132*.bi"
    "onic.UnitParametersReport.UnitParameter\032"
    "Q\n\rUnitParameter\022\014\n\004name\030\001 \002(\t\022\016\n\006minVal"
    "\030\002 \002(\002\022\016\n\006maxVal\030\003 \002(\002\022\022\n\ncurrentVal\030\004 \002"
    "(\002", 722);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "bionic.proto", &protobuf_RegisterTypes);
  CentralControlsReport::default_instance_ = new CentralControlsReport();
  CentralControlsReport_CentralControl::default_instance_ = new CentralControlsReport_CentralControl();
  UnitMotionReport::default_instance_ = new UnitMotionReport();
  UnitMotionReport_UnitMotion::default_instance_ = new UnitMotionReport_UnitMotion();
  UnitParametersReport::default_instance_ = new UnitParametersReport();
  UnitParametersReport_UnitParameter::default_instance_ = new UnitParametersReport_UnitParameter();
  CentralControlsReport::default_instance_->InitAsDefaultInstance();
  CentralControlsReport_CentralControl::default_instance_->InitAsDefaultInstance();
  UnitMotionReport::default_instance_->InitAsDefaultInstance();
  UnitMotionReport_UnitMotion::default_instance_->InitAsDefaultInstance();
  UnitParametersReport::default_instance_->InitAsDefaultInstance();
  UnitParametersReport_UnitParameter::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_bionic_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_bionic_2eproto {
  StaticDescriptorInitializer_bionic_2eproto() {
    protobuf_AddDesc_bionic_2eproto();
  }
} static_descriptor_initializer_bionic_2eproto_;

// ===================================================================

const ::google::protobuf::EnumDescriptor* CentralControlsReport_CentralControl_ControlType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CentralControlsReport_CentralControl_ControlType_descriptor_;
}
bool CentralControlsReport_CentralControl_ControlType_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const CentralControlsReport_CentralControl_ControlType CentralControlsReport_CentralControl::ANIMATION_CHANGE;
const CentralControlsReport_CentralControl_ControlType CentralControlsReport_CentralControl::PARAMETER_CHANGE;
const CentralControlsReport_CentralControl_ControlType CentralControlsReport_CentralControl::ControlType_MIN;
const CentralControlsReport_CentralControl_ControlType CentralControlsReport_CentralControl::ControlType_MAX;
const int CentralControlsReport_CentralControl::ControlType_ARRAYSIZE;
#endif  // _MSC_VER
#ifndef _MSC_VER
const int CentralControlsReport_CentralControl::kControlTypeFieldNumber;
const int CentralControlsReport_CentralControl::kControlParameterFieldNumber;
#endif  // !_MSC_VER

CentralControlsReport_CentralControl::CentralControlsReport_CentralControl()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bionic.CentralControlsReport.CentralControl)
}

void CentralControlsReport_CentralControl::InitAsDefaultInstance() {
}

CentralControlsReport_CentralControl::CentralControlsReport_CentralControl(const CentralControlsReport_CentralControl& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:bionic.CentralControlsReport.CentralControl)
}

void CentralControlsReport_CentralControl::SharedCtor() {
  _cached_size_ = 0;
  controltype_ = 0;
  controlparameter_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CentralControlsReport_CentralControl::~CentralControlsReport_CentralControl() {
  // @@protoc_insertion_point(destructor:bionic.CentralControlsReport.CentralControl)
  SharedDtor();
}

void CentralControlsReport_CentralControl::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CentralControlsReport_CentralControl::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CentralControlsReport_CentralControl::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CentralControlsReport_CentralControl_descriptor_;
}

const CentralControlsReport_CentralControl& CentralControlsReport_CentralControl::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_bionic_2eproto();
  return *default_instance_;
}

CentralControlsReport_CentralControl* CentralControlsReport_CentralControl::default_instance_ = NULL;

CentralControlsReport_CentralControl* CentralControlsReport_CentralControl::New() const {
  return new CentralControlsReport_CentralControl;
}

void CentralControlsReport_CentralControl::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<CentralControlsReport_CentralControl*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(controltype_, controlparameter_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CentralControlsReport_CentralControl::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:bionic.CentralControlsReport.CentralControl)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .bionic.CentralControlsReport.CentralControl.ControlType controlType = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::bionic::CentralControlsReport_CentralControl_ControlType_IsValid(value)) {
            set_controltype(static_cast< ::bionic::CentralControlsReport_CentralControl_ControlType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(21)) goto parse_controlParameter;
        break;
      }

      // required float controlParameter = 2;
      case 2: {
        if (tag == 21) {
         parse_controlParameter:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &controlparameter_)));
          set_has_controlparameter();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:bionic.CentralControlsReport.CentralControl)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:bionic.CentralControlsReport.CentralControl)
  return false;
#undef DO_
}

void CentralControlsReport_CentralControl::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:bionic.CentralControlsReport.CentralControl)
  // required .bionic.CentralControlsReport.CentralControl.ControlType controlType = 1;
  if (has_controltype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->controltype(), output);
  }

  // required float controlParameter = 2;
  if (has_controlparameter()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->controlparameter(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:bionic.CentralControlsReport.CentralControl)
}

::google::protobuf::uint8* CentralControlsReport_CentralControl::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:bionic.CentralControlsReport.CentralControl)
  // required .bionic.CentralControlsReport.CentralControl.ControlType controlType = 1;
  if (has_controltype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->controltype(), target);
  }

  // required float controlParameter = 2;
  if (has_controlparameter()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->controlparameter(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bionic.CentralControlsReport.CentralControl)
  return target;
}

int CentralControlsReport_CentralControl::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .bionic.CentralControlsReport.CentralControl.ControlType controlType = 1;
    if (has_controltype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->controltype());
    }

    // required float controlParameter = 2;
    if (has_controlparameter()) {
      total_size += 1 + 4;
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CentralControlsReport_CentralControl::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CentralControlsReport_CentralControl* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CentralControlsReport_CentralControl*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CentralControlsReport_CentralControl::MergeFrom(const CentralControlsReport_CentralControl& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_controltype()) {
      set_controltype(from.controltype());
    }
    if (from.has_controlparameter()) {
      set_controlparameter(from.controlparameter());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CentralControlsReport_CentralControl::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CentralControlsReport_CentralControl::CopyFrom(const CentralControlsReport_CentralControl& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CentralControlsReport_CentralControl::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void CentralControlsReport_CentralControl::Swap(CentralControlsReport_CentralControl* other) {
  if (other != this) {
    std::swap(controltype_, other->controltype_);
    std::swap(controlparameter_, other->controlparameter_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CentralControlsReport_CentralControl::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CentralControlsReport_CentralControl_descriptor_;
  metadata.reflection = CentralControlsReport_CentralControl_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int CentralControlsReport::kCentralControlFieldNumber;
#endif  // !_MSC_VER

CentralControlsReport::CentralControlsReport()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bionic.CentralControlsReport)
}

void CentralControlsReport::InitAsDefaultInstance() {
}

CentralControlsReport::CentralControlsReport(const CentralControlsReport& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:bionic.CentralControlsReport)
}

void CentralControlsReport::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CentralControlsReport::~CentralControlsReport() {
  // @@protoc_insertion_point(destructor:bionic.CentralControlsReport)
  SharedDtor();
}

void CentralControlsReport::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CentralControlsReport::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CentralControlsReport::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CentralControlsReport_descriptor_;
}

const CentralControlsReport& CentralControlsReport::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_bionic_2eproto();
  return *default_instance_;
}

CentralControlsReport* CentralControlsReport::default_instance_ = NULL;

CentralControlsReport* CentralControlsReport::New() const {
  return new CentralControlsReport;
}

void CentralControlsReport::Clear() {
  centralcontrol_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CentralControlsReport::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:bionic.CentralControlsReport)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .bionic.CentralControlsReport.CentralControl centralControl = 1;
      case 1: {
        if (tag == 10) {
         parse_centralControl:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_centralcontrol()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_centralControl;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:bionic.CentralControlsReport)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:bionic.CentralControlsReport)
  return false;
#undef DO_
}

void CentralControlsReport::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:bionic.CentralControlsReport)
  // repeated .bionic.CentralControlsReport.CentralControl centralControl = 1;
  for (int i = 0; i < this->centralcontrol_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->centralcontrol(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:bionic.CentralControlsReport)
}

::google::protobuf::uint8* CentralControlsReport::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:bionic.CentralControlsReport)
  // repeated .bionic.CentralControlsReport.CentralControl centralControl = 1;
  for (int i = 0; i < this->centralcontrol_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->centralcontrol(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bionic.CentralControlsReport)
  return target;
}

int CentralControlsReport::ByteSize() const {
  int total_size = 0;

  // repeated .bionic.CentralControlsReport.CentralControl centralControl = 1;
  total_size += 1 * this->centralcontrol_size();
  for (int i = 0; i < this->centralcontrol_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->centralcontrol(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CentralControlsReport::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CentralControlsReport* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CentralControlsReport*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CentralControlsReport::MergeFrom(const CentralControlsReport& from) {
  GOOGLE_CHECK_NE(&from, this);
  centralcontrol_.MergeFrom(from.centralcontrol_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CentralControlsReport::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CentralControlsReport::CopyFrom(const CentralControlsReport& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CentralControlsReport::IsInitialized() const {

  if (!::google::protobuf::internal::AllAreInitialized(this->centralcontrol())) return false;
  return true;
}

void CentralControlsReport::Swap(CentralControlsReport* other) {
  if (other != this) {
    centralcontrol_.Swap(&other->centralcontrol_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CentralControlsReport::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CentralControlsReport_descriptor_;
  metadata.reflection = CentralControlsReport_reflection_;
  return metadata;
}


// ===================================================================

const ::google::protobuf::EnumDescriptor* UnitMotionReport_UnitMotion_MotionType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return UnitMotionReport_UnitMotion_MotionType_descriptor_;
}
bool UnitMotionReport_UnitMotion_MotionType_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const UnitMotionReport_UnitMotion_MotionType UnitMotionReport_UnitMotion::ACCEL_MAGNITUDE;
const UnitMotionReport_UnitMotion_MotionType UnitMotionReport_UnitMotion::YAW;
const UnitMotionReport_UnitMotion_MotionType UnitMotionReport_UnitMotion::PITCH;
const UnitMotionReport_UnitMotion_MotionType UnitMotionReport_UnitMotion::ROLL;
const UnitMotionReport_UnitMotion_MotionType UnitMotionReport_UnitMotion::MotionType_MIN;
const UnitMotionReport_UnitMotion_MotionType UnitMotionReport_UnitMotion::MotionType_MAX;
const int UnitMotionReport_UnitMotion::MotionType_ARRAYSIZE;
#endif  // _MSC_VER
#ifndef _MSC_VER
const int UnitMotionReport_UnitMotion::kMotionTypeFieldNumber;
const int UnitMotionReport_UnitMotion::kMotionDataFieldNumber;
#endif  // !_MSC_VER

UnitMotionReport_UnitMotion::UnitMotionReport_UnitMotion()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bionic.UnitMotionReport.UnitMotion)
}

void UnitMotionReport_UnitMotion::InitAsDefaultInstance() {
}

UnitMotionReport_UnitMotion::UnitMotionReport_UnitMotion(const UnitMotionReport_UnitMotion& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:bionic.UnitMotionReport.UnitMotion)
}

void UnitMotionReport_UnitMotion::SharedCtor() {
  _cached_size_ = 0;
  motiontype_ = 0;
  motiondata_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

UnitMotionReport_UnitMotion::~UnitMotionReport_UnitMotion() {
  // @@protoc_insertion_point(destructor:bionic.UnitMotionReport.UnitMotion)
  SharedDtor();
}

void UnitMotionReport_UnitMotion::SharedDtor() {
  if (this != default_instance_) {
  }
}

void UnitMotionReport_UnitMotion::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UnitMotionReport_UnitMotion::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return UnitMotionReport_UnitMotion_descriptor_;
}

const UnitMotionReport_UnitMotion& UnitMotionReport_UnitMotion::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_bionic_2eproto();
  return *default_instance_;
}

UnitMotionReport_UnitMotion* UnitMotionReport_UnitMotion::default_instance_ = NULL;

UnitMotionReport_UnitMotion* UnitMotionReport_UnitMotion::New() const {
  return new UnitMotionReport_UnitMotion;
}

void UnitMotionReport_UnitMotion::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<UnitMotionReport_UnitMotion*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(motiontype_, motiondata_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool UnitMotionReport_UnitMotion::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:bionic.UnitMotionReport.UnitMotion)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .bionic.UnitMotionReport.UnitMotion.MotionType motionType = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::bionic::UnitMotionReport_UnitMotion_MotionType_IsValid(value)) {
            set_motiontype(static_cast< ::bionic::UnitMotionReport_UnitMotion_MotionType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(21)) goto parse_motionData;
        break;
      }

      // required float motionData = 2;
      case 2: {
        if (tag == 21) {
         parse_motionData:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &motiondata_)));
          set_has_motiondata();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:bionic.UnitMotionReport.UnitMotion)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:bionic.UnitMotionReport.UnitMotion)
  return false;
#undef DO_
}

void UnitMotionReport_UnitMotion::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:bionic.UnitMotionReport.UnitMotion)
  // required .bionic.UnitMotionReport.UnitMotion.MotionType motionType = 1;
  if (has_motiontype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->motiontype(), output);
  }

  // required float motionData = 2;
  if (has_motiondata()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->motiondata(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:bionic.UnitMotionReport.UnitMotion)
}

::google::protobuf::uint8* UnitMotionReport_UnitMotion::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:bionic.UnitMotionReport.UnitMotion)
  // required .bionic.UnitMotionReport.UnitMotion.MotionType motionType = 1;
  if (has_motiontype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->motiontype(), target);
  }

  // required float motionData = 2;
  if (has_motiondata()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->motiondata(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bionic.UnitMotionReport.UnitMotion)
  return target;
}

int UnitMotionReport_UnitMotion::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .bionic.UnitMotionReport.UnitMotion.MotionType motionType = 1;
    if (has_motiontype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->motiontype());
    }

    // required float motionData = 2;
    if (has_motiondata()) {
      total_size += 1 + 4;
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UnitMotionReport_UnitMotion::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const UnitMotionReport_UnitMotion* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const UnitMotionReport_UnitMotion*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void UnitMotionReport_UnitMotion::MergeFrom(const UnitMotionReport_UnitMotion& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_motiontype()) {
      set_motiontype(from.motiontype());
    }
    if (from.has_motiondata()) {
      set_motiondata(from.motiondata());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void UnitMotionReport_UnitMotion::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UnitMotionReport_UnitMotion::CopyFrom(const UnitMotionReport_UnitMotion& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UnitMotionReport_UnitMotion::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void UnitMotionReport_UnitMotion::Swap(UnitMotionReport_UnitMotion* other) {
  if (other != this) {
    std::swap(motiontype_, other->motiontype_);
    std::swap(motiondata_, other->motiondata_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata UnitMotionReport_UnitMotion::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = UnitMotionReport_UnitMotion_descriptor_;
  metadata.reflection = UnitMotionReport_UnitMotion_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int UnitMotionReport::kUnitMotionFieldNumber;
#endif  // !_MSC_VER

UnitMotionReport::UnitMotionReport()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bionic.UnitMotionReport)
}

void UnitMotionReport::InitAsDefaultInstance() {
}

UnitMotionReport::UnitMotionReport(const UnitMotionReport& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:bionic.UnitMotionReport)
}

void UnitMotionReport::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

UnitMotionReport::~UnitMotionReport() {
  // @@protoc_insertion_point(destructor:bionic.UnitMotionReport)
  SharedDtor();
}

void UnitMotionReport::SharedDtor() {
  if (this != default_instance_) {
  }
}

void UnitMotionReport::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UnitMotionReport::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return UnitMotionReport_descriptor_;
}

const UnitMotionReport& UnitMotionReport::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_bionic_2eproto();
  return *default_instance_;
}

UnitMotionReport* UnitMotionReport::default_instance_ = NULL;

UnitMotionReport* UnitMotionReport::New() const {
  return new UnitMotionReport;
}

void UnitMotionReport::Clear() {
  unitmotion_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool UnitMotionReport::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:bionic.UnitMotionReport)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .bionic.UnitMotionReport.UnitMotion unitMotion = 1;
      case 1: {
        if (tag == 10) {
         parse_unitMotion:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_unitmotion()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_unitMotion;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:bionic.UnitMotionReport)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:bionic.UnitMotionReport)
  return false;
#undef DO_
}

void UnitMotionReport::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:bionic.UnitMotionReport)
  // repeated .bionic.UnitMotionReport.UnitMotion unitMotion = 1;
  for (int i = 0; i < this->unitmotion_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->unitmotion(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:bionic.UnitMotionReport)
}

::google::protobuf::uint8* UnitMotionReport::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:bionic.UnitMotionReport)
  // repeated .bionic.UnitMotionReport.UnitMotion unitMotion = 1;
  for (int i = 0; i < this->unitmotion_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->unitmotion(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bionic.UnitMotionReport)
  return target;
}

int UnitMotionReport::ByteSize() const {
  int total_size = 0;

  // repeated .bionic.UnitMotionReport.UnitMotion unitMotion = 1;
  total_size += 1 * this->unitmotion_size();
  for (int i = 0; i < this->unitmotion_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->unitmotion(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UnitMotionReport::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const UnitMotionReport* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const UnitMotionReport*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void UnitMotionReport::MergeFrom(const UnitMotionReport& from) {
  GOOGLE_CHECK_NE(&from, this);
  unitmotion_.MergeFrom(from.unitmotion_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void UnitMotionReport::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UnitMotionReport::CopyFrom(const UnitMotionReport& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UnitMotionReport::IsInitialized() const {

  if (!::google::protobuf::internal::AllAreInitialized(this->unitmotion())) return false;
  return true;
}

void UnitMotionReport::Swap(UnitMotionReport* other) {
  if (other != this) {
    unitmotion_.Swap(&other->unitmotion_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata UnitMotionReport::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = UnitMotionReport_descriptor_;
  metadata.reflection = UnitMotionReport_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int UnitParametersReport_UnitParameter::kNameFieldNumber;
const int UnitParametersReport_UnitParameter::kMinValFieldNumber;
const int UnitParametersReport_UnitParameter::kMaxValFieldNumber;
const int UnitParametersReport_UnitParameter::kCurrentValFieldNumber;
#endif  // !_MSC_VER

UnitParametersReport_UnitParameter::UnitParametersReport_UnitParameter()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bionic.UnitParametersReport.UnitParameter)
}

void UnitParametersReport_UnitParameter::InitAsDefaultInstance() {
}

UnitParametersReport_UnitParameter::UnitParametersReport_UnitParameter(const UnitParametersReport_UnitParameter& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:bionic.UnitParametersReport.UnitParameter)
}

void UnitParametersReport_UnitParameter::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  minval_ = 0;
  maxval_ = 0;
  currentval_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

UnitParametersReport_UnitParameter::~UnitParametersReport_UnitParameter() {
  // @@protoc_insertion_point(destructor:bionic.UnitParametersReport.UnitParameter)
  SharedDtor();
}

void UnitParametersReport_UnitParameter::SharedDtor() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (this != default_instance_) {
  }
}

void UnitParametersReport_UnitParameter::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UnitParametersReport_UnitParameter::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return UnitParametersReport_UnitParameter_descriptor_;
}

const UnitParametersReport_UnitParameter& UnitParametersReport_UnitParameter::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_bionic_2eproto();
  return *default_instance_;
}

UnitParametersReport_UnitParameter* UnitParametersReport_UnitParameter::default_instance_ = NULL;

UnitParametersReport_UnitParameter* UnitParametersReport_UnitParameter::New() const {
  return new UnitParametersReport_UnitParameter;
}

void UnitParametersReport_UnitParameter::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<UnitParametersReport_UnitParameter*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 15) {
    ZR_(minval_, currentval_);
    if (has_name()) {
      if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        name_->clear();
      }
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool UnitParametersReport_UnitParameter::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:bionic.UnitParametersReport.UnitParameter)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(21)) goto parse_minVal;
        break;
      }

      // required float minVal = 2;
      case 2: {
        if (tag == 21) {
         parse_minVal:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &minval_)));
          set_has_minval();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(29)) goto parse_maxVal;
        break;
      }

      // required float maxVal = 3;
      case 3: {
        if (tag == 29) {
         parse_maxVal:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &maxval_)));
          set_has_maxval();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(37)) goto parse_currentVal;
        break;
      }

      // required float currentVal = 4;
      case 4: {
        if (tag == 37) {
         parse_currentVal:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &currentval_)));
          set_has_currentval();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:bionic.UnitParametersReport.UnitParameter)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:bionic.UnitParametersReport.UnitParameter)
  return false;
#undef DO_
}

void UnitParametersReport_UnitParameter::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:bionic.UnitParametersReport.UnitParameter)
  // required string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // required float minVal = 2;
  if (has_minval()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->minval(), output);
  }

  // required float maxVal = 3;
  if (has_maxval()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->maxval(), output);
  }

  // required float currentVal = 4;
  if (has_currentval()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->currentval(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:bionic.UnitParametersReport.UnitParameter)
}

::google::protobuf::uint8* UnitParametersReport_UnitParameter::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:bionic.UnitParametersReport.UnitParameter)
  // required string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // required float minVal = 2;
  if (has_minval()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->minval(), target);
  }

  // required float maxVal = 3;
  if (has_maxval()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->maxval(), target);
  }

  // required float currentVal = 4;
  if (has_currentval()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->currentval(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bionic.UnitParametersReport.UnitParameter)
  return target;
}

int UnitParametersReport_UnitParameter::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string name = 1;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // required float minVal = 2;
    if (has_minval()) {
      total_size += 1 + 4;
    }

    // required float maxVal = 3;
    if (has_maxval()) {
      total_size += 1 + 4;
    }

    // required float currentVal = 4;
    if (has_currentval()) {
      total_size += 1 + 4;
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UnitParametersReport_UnitParameter::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const UnitParametersReport_UnitParameter* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const UnitParametersReport_UnitParameter*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void UnitParametersReport_UnitParameter::MergeFrom(const UnitParametersReport_UnitParameter& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_name()) {
      set_name(from.name());
    }
    if (from.has_minval()) {
      set_minval(from.minval());
    }
    if (from.has_maxval()) {
      set_maxval(from.maxval());
    }
    if (from.has_currentval()) {
      set_currentval(from.currentval());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void UnitParametersReport_UnitParameter::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UnitParametersReport_UnitParameter::CopyFrom(const UnitParametersReport_UnitParameter& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UnitParametersReport_UnitParameter::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000f) != 0x0000000f) return false;

  return true;
}

void UnitParametersReport_UnitParameter::Swap(UnitParametersReport_UnitParameter* other) {
  if (other != this) {
    std::swap(name_, other->name_);
    std::swap(minval_, other->minval_);
    std::swap(maxval_, other->maxval_);
    std::swap(currentval_, other->currentval_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata UnitParametersReport_UnitParameter::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = UnitParametersReport_UnitParameter_descriptor_;
  metadata.reflection = UnitParametersReport_UnitParameter_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int UnitParametersReport::kUnitParameterFieldNumber;
#endif  // !_MSC_VER

UnitParametersReport::UnitParametersReport()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bionic.UnitParametersReport)
}

void UnitParametersReport::InitAsDefaultInstance() {
}

UnitParametersReport::UnitParametersReport(const UnitParametersReport& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:bionic.UnitParametersReport)
}

void UnitParametersReport::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

UnitParametersReport::~UnitParametersReport() {
  // @@protoc_insertion_point(destructor:bionic.UnitParametersReport)
  SharedDtor();
}

void UnitParametersReport::SharedDtor() {
  if (this != default_instance_) {
  }
}

void UnitParametersReport::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UnitParametersReport::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return UnitParametersReport_descriptor_;
}

const UnitParametersReport& UnitParametersReport::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_bionic_2eproto();
  return *default_instance_;
}

UnitParametersReport* UnitParametersReport::default_instance_ = NULL;

UnitParametersReport* UnitParametersReport::New() const {
  return new UnitParametersReport;
}

void UnitParametersReport::Clear() {
  unitparameter_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool UnitParametersReport::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:bionic.UnitParametersReport)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .bionic.UnitParametersReport.UnitParameter unitParameter = 1;
      case 1: {
        if (tag == 10) {
         parse_unitParameter:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_unitparameter()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_unitParameter;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:bionic.UnitParametersReport)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:bionic.UnitParametersReport)
  return false;
#undef DO_
}

void UnitParametersReport::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:bionic.UnitParametersReport)
  // repeated .bionic.UnitParametersReport.UnitParameter unitParameter = 1;
  for (int i = 0; i < this->unitparameter_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->unitparameter(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:bionic.UnitParametersReport)
}

::google::protobuf::uint8* UnitParametersReport::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:bionic.UnitParametersReport)
  // repeated .bionic.UnitParametersReport.UnitParameter unitParameter = 1;
  for (int i = 0; i < this->unitparameter_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->unitparameter(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bionic.UnitParametersReport)
  return target;
}

int UnitParametersReport::ByteSize() const {
  int total_size = 0;

  // repeated .bionic.UnitParametersReport.UnitParameter unitParameter = 1;
  total_size += 1 * this->unitparameter_size();
  for (int i = 0; i < this->unitparameter_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->unitparameter(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UnitParametersReport::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const UnitParametersReport* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const UnitParametersReport*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void UnitParametersReport::MergeFrom(const UnitParametersReport& from) {
  GOOGLE_CHECK_NE(&from, this);
  unitparameter_.MergeFrom(from.unitparameter_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void UnitParametersReport::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UnitParametersReport::CopyFrom(const UnitParametersReport& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UnitParametersReport::IsInitialized() const {

  if (!::google::protobuf::internal::AllAreInitialized(this->unitparameter())) return false;
  return true;
}

void UnitParametersReport::Swap(UnitParametersReport* other) {
  if (other != this) {
    unitparameter_.Swap(&other->unitparameter_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata UnitParametersReport::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = UnitParametersReport_descriptor_;
  metadata.reflection = UnitParametersReport_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace bionic

// @@protoc_insertion_point(global_scope)
